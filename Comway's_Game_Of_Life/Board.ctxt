#BlueJ class context
comment0.params=maxColumn\ maxRow
comment0.target=Board(int,\ int)
comment0.text=\r\n\ Creates\ a\ board\ with\ the\ default\ characteristics.\r\n\ \r\n\ @param\ maxColumn\ The\ maximum\ number\ of\ columns,\ must\ not\ be\ <\ 0\r\n\ @param\ maxRow\ The\ maximum\ number\ of\ rows,\ must\ not\ be\ <\ 0\r\n
comment1.params=locationX\ locationY
comment1.target=Cell\ getCellSpecifed(int,\ int)
comment1.text=\r\n\ Returns\ a\ specified\ cell.\r\n\ \r\n\ @param\ locationX\ The\ X-value\ of\ the\ cell,\ must\ not\ be\ >\ 0\r\n\ @param\ locationY\ The\ Y-value\ of\ the\ cell,\ must\ not\ be\ >\ 0\r\n\ @return\ The\ specified\ cell\r\n
comment10.params=
comment10.target=void\ testBoard()
comment10.text=\r\n\ Tests\ the\ board\ and\ makes\ correct\ cells\ dead\ or\ alive.\r\n
comment11.params=
comment11.target=void\ updateBoard()
comment11.text=\r\n\ Updates\ the\ board\ with\ the\ present\ state\ of\ each\ cell\ in\ the\ board\ in\ console-style.\r\n
comment12.params=
comment12.target=void\ updateCell()
comment12.text=\r\n\ Updates\ each\ cell\ so\ that\ the\ future\ state\ of\ each\ cell\ becomes\ the\ present\ state\ of\ the\ cell.\r\n
comment2.params=
comment2.target=int\ getGeneration()
comment2.text=\r\n\ Returns\ the\ value\ of\ the\ current\ generation.\r\n\ \r\n\ @return\ The\ current\ value\ of\ generation\r\n
comment3.params=
comment3.target=boolean\ getIsGameOver()
comment3.text=\r\n\ Returns\ if\ the\ game\ is\ over.\r\n\ \r\n\ @return\ isGameOver\ The\ value\ if\ the\ game\ is\ over.\r\n
comment4.params=
comment4.target=int\ getMaxColumn()
comment4.text=\r\n\ Returns\ the\ maximum\ number\ of\ columns\ in\ the\ board.\r\n\ \r\n\ @return\ maxColumn\ The\ maximum\ number\ of\ columns\r\n
comment5.params=
comment5.target=int\ getMaxRow()
comment5.text=\r\n\ Returns\ the\ maximum\ number\ of\ rows\ in\ the\ board.\r\n\ \r\n\ @return\ maxRow\ The\ maximum\ number\ of\ rows\r\n
comment6.params=locationX\ locationY
comment6.target=boolean\ getSpecificIsDeadCurrent(int,\ int)
comment6.text=\r\n\ Returns\ the\ current\ value\ for\ the\ specific\ cell\ is\ alive\ or\ dead.\r\n\ \r\n\ @return\ isDeadCurrent\ The\ current\ value\ of\ the\ specified\ cell\r\n\ @param\ locationX\ The\ x-value\ of\ the\ specified\ cell,\ must\ not\ be\ <\ 0\r\n\ @param\ locationY\ The\ y-value\ of\ the\ specified\ cell,\ must\ not\ be\ <\ 0\r\n
comment7.params=locationX\ locationY
comment7.target=boolean\ getSpecificIsDeadFuture(int,\ int)
comment7.text=\r\n\ Returns\ the\ future\ value\ of\ the\ specific\ cell.\r\n\ \r\n\ @return\ isDeadFuture\ The\ future\ value\ of\ isDead.\r\n\ @param\ locationX\ The\ x-value\ of\ the\ specified\ cell,\ must\ not\ be\ <\ 0\r\n\ @param\ locationY\ The\ y-value\ of\ the\ specified\ cell,\ must\ not\ be\ <\ 0\r\n
comment8.params=
comment8.target=void\ checkIfGameIsOver()
comment8.text=\r\n\ Checks\ to\ see\ if\ the\ Game\ of\ Life\ is\ over.\ This\ is\ determined\ if\ the\ \r\n\ future\ cell\ state\ is\ equivalent\ to\ the\ current\ cell\ states.\r\n
comment9.params=isDead\ locationX\ locationY
comment9.target=void\ setSpecificIsDead(boolean,\ int,\ int)
comment9.text=\r\n\ Sets\ the\ specific\ cell\ to\ live\ or\ dead\ current.\r\n\ \r\n\ @param\ isDead\ If\ the\ cell\ is\ dead\ or\ not.\r\n\ @param\ locationX\ The\ x\ location\ \r\n\ @param\ locationY\ The\ y\ location\r\n
numComments=13
